@page "/demo11/demo-eventbinding"

@rendermode InteractiveServer

<PageTitle>Event Binding</PageTitle>

<h3>Demo of Event Binding</h3>

<hr />

<h5>Example of Event Handling</h5>

<div class="form-check mb-2">
    <input class="form-check-input" 
           type="checkbox" id="IsOkay" name="IsOkay" 
           value="Okay" 
           @bind="isChecked" />
    <label class="form-check-label">
        Is Okay?
    </label>
</div>

<button class="btn btn-primary mb-2" 
        @onclick="OnClick">
    Click to change Checkbox Status
</button>

<p class="fst-italic text-muted">
    @statusMessage
</p>


@code {

    bool isChecked = true;
    string? statusMessage;

    private void OnClick ( MouseEventArgs e )
    {
        isChecked = !isChecked;

        statusMessage = $"Mouse was clicked at {e.ScreenX}, {e.ScreenY}.";
    }

}


<hr />

<h5>Example of Event Binding</h5>

<div class="mb-3 mt-3">
    <label for="name" class="form-label">Name:</label>
    <input type="text" class="form-control" id="txtName" name="txtName" placeholder="your full name" 
           @oninput="ShowGreeting" />
</div>
<p>
    @greeting
</p>

@code {

    string? greeting;

    private void ShowGreeting ( ChangeEventArgs e )
    {
        greeting = e.Value?.ToString()?.ToUpper();
    }

}



<hr />

<h5>Another Example of Event Binding</h5>

<div class="mb-3 mt-3">
    <label for="txtPassword" class="form-label">Password:</label>
    <input type="@(showPassword ? "text" : "password")"
           value="@Password"
           class="form-control" id="txtPassword" name="txtPassword" autocomplete="off"
           @oninput="OnPasswordChanged" />
</div>

<div class="form-check mb-2">
    <input class="form-check-input"
           type="checkbox" 
           value="Okay"
           @bind="showPassword" />
    <label class="form-check-label">
        Show password?
    </label>
</div>


@code {

    private bool showPassword;

    public string? Password { get; set; }

    [Parameter]
    public EventCallback<string> PasswordChanged { get; set; }

    private Task OnPasswordChanged ( ChangeEventArgs e )
    {
        Password = e.Value?.ToString();
        return PasswordChanged.InvokeAsync( Password );
    }

}

